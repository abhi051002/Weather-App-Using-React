{"ast":null,"code":"var _jsxFileName = \"/home/nte-803-vm/React Projects/Weather-App-Using-React/src/components/weather/temp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport WeatherCard from \"./weathercard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Temp = () => {\n  _s();\n  const [searchValue, setSearchValue] = useState('');\n  const [tempInfo, setTempInfo] = useState('');\n  const apikey = process.env.REACT_APP_WEATHER_API;\n  const getWeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=${apikey}`;\n      let response = await fetch(url);\n      let data = (await response).json();\n      console.log(data);\n      const {\n        temp\n      } = data.main;\n      const {\n        main: wearthermood\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      const myNewWeatherInfo = {\n        name,\n        temp,\n        humidity,\n        pressure,\n        wearthermood,\n        speed,\n        country,\n        sunset\n      };\n      setTempInfo(myNewWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Search....\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"searchItem\",\n          value: searchValue,\n          onChange: e => setSearchValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"button\",\n          onClick: getWeatherInfo,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      ...tempInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Temp, \"+2kfvYS7ViTJzNWZlk1B1ulzQVw=\");\n_c = Temp;\nexport default Temp;\nvar _c;\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"names":["React","useEffect","useState","WeatherCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Temp","_s","searchValue","setSearchValue","tempInfo","setTempInfo","apikey","process","env","REACT_APP_WEATHER_API","getWeatherInfo","url","response","fetch","data","json","console","log","temp","main","wearthermood","weather","name","speed","wind","country","sunset","sys","myNewWeatherInfo","humidity","pressure","error","children","className","type","placeholder","autoFocus","id","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/nte-803-vm/React Projects/Weather-App-Using-React/src/components/weather/temp.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport WeatherCard from \"./weathercard\";\n\nconst Temp = () => {\n    const [searchValue,setSearchValue] = useState('');\n    const [tempInfo, setTempInfo] = useState('');\n    const apikey= process.env.REACT_APP_WEATHER_API;\n    const getWeatherInfo = async () =>{\n        try{\n            let url= `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=${apikey}`;\n            let response = await fetch(url);\n            let data = (await response).json();\n            console.log(data);\n            const {temp} = data.main;\n            const {main:wearthermood} =data.weather[0];\n            const {name} = data;\n            const {speed} = data.wind;\n            const {country ,sunset} = data.sys;\n\n            const myNewWeatherInfo = {\n              name,temp,humidity,pressure,wearthermood,speed,country,sunset,\n            };\n            setTempInfo(myNewWeatherInfo);\n        }\n        catch(error){\n            console.log(error);\n        }\n    };\n    useEffect(()=>{getWeatherInfo()},[]);\n  return (\n    <>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <input\n            type=\"search\"\n            placeholder=\"Search....\"\n            autoFocus\n            id=\"search\"\n            className=\"searchItem\"\n            value={searchValue}\n            onChange={(e) => setSearchValue(e.target.value)}\n          />\n          <button className=\"searchButton\" type=\"button\" onClick={getWeatherInfo}>\n            Search\n          </button>\n        </div>\n      </div>\n      <WeatherCard {...tempInfo} />\n    </>\n  );\n};\n\nexport default Temp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}